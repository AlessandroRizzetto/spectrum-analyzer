{"ast":null,"code":"var _jsxFileName = \"/home/ale/spectrum-analyzer/src/pages/Dashboard.js\";\nimport React, { useState } from \"react\";\nimport { Container, Row, Col, Alert, Card } from \"react-bootstrap\";\nimport Navigation from \"../components/Navigation\";\nimport data from \"../data/data.json\";\nimport Submit from \"./Submit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = props => {\n  const mysql = require(\"mysql\");\n  const bodyParser = require(\"body-parser\");\n  const express = require(\"express\");\n  const app = express();\n  const port = 4000;\n  app.use(bodyParser.json());\n  var mysqlConnection = mysql.createConnection({\n    host: \"localhost\",\n    user: \"root\",\n    password: \"password\",\n    database: \"spectrum\"\n  });\n  mysqlConnection.connect(err => {\n    if (!err) {\n      console.log(\"DB Connected\");\n    } else {\n      console.log(\"DB Connection Failed  \" + err.message);\n    }\n  });\n  app.get(\"/rf\", (req, res, next) => {\n    mysqlConnection.query(\"SELECT waterfall FROM spectrumTable WHERE id = \" + props.sensor.value, function (err, result, fields) {\n      if (err) throw err;\n      if (results && results.length > 1) {\n        const imgdata = Buffer.from(results[0].waterfall).toString(\"base64\");\n        res.type(\"image/png\").send(imgdata);\n      }\n    });\n  });\n  app.listen(port, () => {\n    console.log(`Listening at http://localhost:${port}`);\n  });\n\n  // console.log(props.sensor)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      sensor: props.sensor,\n      setSensor: props.setSensor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"d-flex justify-content-center align-items-center mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"text-lg-center\",\n            children: props.sensor.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://localhost:3000/rf\",\n            alt: \"waterfall\",\n            style: {\n              width: '1000px',\n              paddingTop: '200px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","Container","Row","Col","Alert","Card","Navigation","data","Submit","Dashboard","props","mysql","require","bodyParser","express","app","port","use","json","mysqlConnection","createConnection","host","user","password","database","connect","err","console","log","message","get","req","res","next","query","sensor","value","result","fields","results","length","imgdata","Buffer","from","waterfall","toString","type","send","listen","setSensor","label","width","paddingTop"],"sources":["/home/ale/spectrum-analyzer/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Container, Row, Col, Alert, Card } from \"react-bootstrap\";\nimport Navigation from \"../components/Navigation\";\nimport data from \"../data/data.json\"\nimport Submit from \"./Submit\"\n\n\n\n\nconst Dashboard = (props) => {\n  const mysql = require(\"mysql\");\n  const bodyParser = require(\"body-parser\");\n  const express = require(\"express\");\n  const app = express();\n  const port = 4000;\n  app.use(bodyParser.json());\n\n  var mysqlConnection = mysql.createConnection({\n    host: \"localhost\",\n    user: \"root\",\n    password: \"password\",\n    database: \"spectrum\"\n  });\n  mysqlConnection.connect((err) => {\n    if (!err) {\n      console.log(\"DB Connected\");\n    } else {\n      console.log(\"DB Connection Failed  \" + err.message);\n    }\n  });\n\n  app.get(\"/rf\", (req, res, next) => {\n    mysqlConnection.query(\n      \"SELECT waterfall FROM spectrumTable WHERE id = \" + props.sensor.value,\n      function (err, result, fields) {\n        if (err) throw err;\n        if (results && results.length > 1) {\n          const imgdata = Buffer.from(results[0].waterfall).toString(\"base64\");\n          res.type(\"image/png\").send(imgdata);\n        }\n      }\n    )\n\n  });\n\n  app.listen(port, () => {\n    console.log(`Listening at http://localhost:${port}`);\n  });\n\n\n  // console.log(props.sensor)\n  return (\n    <div>\n      <Navigation sensor={props.sensor} setSensor={props.setSensor} />\n      <Container className=\"d-flex justify-content-center align-items-center mt-4\">\n        <div>\n\n          <Row>\n\n            <p class=\"text-lg-center\">{props.sensor.label}</p>\n            <img src={\"http://localhost:3000/rf\"} alt=\"waterfall\" style={{ width: '1000px', paddingTop: '200px' }} />\n\n          </Row>\n\n\n\n        </div>\n      </Container >\n    </div >\n  );\n}\n\nexport default Dashboard"],"mappings":"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"},"metadata":{},"sourceType":"module"}