[{"/home/ale/spectrum-analyzer/src/index.js":"1","/home/ale/spectrum-analyzer/src/App.js":"2","/home/ale/spectrum-analyzer/src/reportWebVitals.js":"3","/home/ale/spectrum-analyzer/src/pages/Project.js":"4","/home/ale/spectrum-analyzer/src/pages/Dashboard.js":"5","/home/ale/spectrum-analyzer/src/pages/Home.js":"6","/home/ale/spectrum-analyzer/src/pages/Submit.js":"7","/home/ale/spectrum-analyzer/src/components/Navigation.js":"8","/home/ale/spectrum-analyzer/src/components/Map.js":"9"},{"size":478,"mtime":1666885227497,"results":"10","hashOfConfig":"11"},{"size":893,"mtime":1666891887628,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1666364171985,"results":"13","hashOfConfig":"11"},{"size":445,"mtime":1666364171985,"results":"14","hashOfConfig":"11"},{"size":1514,"mtime":1666963321790,"results":"15","hashOfConfig":"11"},{"size":5441,"mtime":1666918130180,"results":"16","hashOfConfig":"11"},{"size":410,"mtime":1666552896097,"results":"17","hashOfConfig":"11"},{"size":2742,"mtime":1666897317186,"results":"18","hashOfConfig":"11"},{"size":825,"mtime":1666886477060,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1eakos1",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ale/spectrum-analyzer/src/index.js",[],["44","45"],"/home/ale/spectrum-analyzer/src/App.js",["46","47","48","49"],"import React, { useState } from 'react';\n\nimport Dashboard from './pages/Dashboard';\nimport Project from './pages/Project';\nimport Home from './pages/Home';\nimport Apply from './pages/Submit';\nimport {Route, BrowserRouter as Router} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './style/App.css'\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\n\n\nfunction App() {\n  const[sensor, setSensor] = useState({value: 'trentotrento', label: 'Trento'})\n\n  return (\n    <div className=\"app-wrapper\">\n      <Router>\n        <Route exact path=\"/\" render={() => <Home/>}/>\n        <Route path=\"/dashboard\" exact render={() => <Dashboard sensor={sensor} setSensor={setSensor}/>}/>\n        <Route path=\"/apply\" render={() => <Apply/>}/>\n        <Route path=\"/project\" render={() => <Project/>}/>\n      </Router>\n    </div>\n  );\n}\n\n\nexport default App;\n","/home/ale/spectrum-analyzer/src/reportWebVitals.js",[],"/home/ale/spectrum-analyzer/src/pages/Project.js",["50","51"],"import React from 'react';\nimport Navigation from '../components/Navigation.js'\nimport { Container, Alert, Row, Col } from 'react-bootstrap';      //component\n\n\nconst Project = () => {\n    return (\n        <>\n            <Navigation/>\n\n            <Container style={{paddingTop:\"10px\"}}>\n                <Row>\n                    project\n                </Row>\n            </Container>\n            \n        </>\n    );\n};\n\nexport default Project;","/home/ale/spectrum-analyzer/src/pages/Dashboard.js",["52","53","54","55","56","57","58"],"/home/ale/spectrum-analyzer/src/pages/Home.js",["59","60","61"],"import React from 'react';\nimport Navigation from '../components/Navigation.js'\nimport { Container, Alert, Row, Col, Card, Button } from 'react-bootstrap';      //component\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport '../style/App.css';\nimport data from '../data/data1.json'\nimport { useEffect } from 'react';\nimport { SocialIcon } from 'react-social-icons';\nimport unilogo from '../media/uni.svg'\nconst styles = {\n    nameStyle: {\n        fontSize: '5em',\n    },\n    inlineChild: {\n        display: 'inline-block',\n    },\n    mainContainer: {\n        marginTop: '5em',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    iconStyle: {\n        marginLeft: 10,\n        marginRight: 10,\n        marginBottom: 10,\n        height: 100,\n        width: 100,\n    },\n    homeTextContainer: {\n        marginLeft: 300,\n        marginTop: 100,\n        marginBottom: 100,\n        flexDirection: 'column',\n        whiteSpace: 'pre-wrap',\n        textAlign: 'left',\n        fontSize: '1.5em',\n        fontWeight: 500,\n    },\n    homeImageContainer: {\n        margin: 10,\n        justifyContent: 'center',\n        alignItems: 'center',\n        display: 'flex',\n\n    },\n    socialContainer: {\n        marginTop: 50,\n    },\n};\n\n\nconst Home = () => {\n    return (\n        <>\n            <Navigation />\n            <Container className=\"d-flex justify-content-center align-items-center \">\n                <div>\n                    <div style={styles.mainContainer}>\n                        <h1 style={styles.nameStyle}>Spectrum Analyzer</h1>\n                        <h1 style={styles.nameStyle}>Community</h1>\n                        <div className=\"social-icons\" style={styles.socialContainer}>\n                            <SocialIcon\n                                url=\"https://github.com/elrich2610/spectrum-analyzer\"\n                                style={styles.iconStyle}\n                            />\n                            <SocialIcon\n                                url=\"https://www.disi.unitn.it/it\"\n                                defaultSVG={unilogo}\n                                style={styles.iconStyle}\n                            />\n                        </div>\n\n\n\n                    </div>\n                    <Row>\n                        <Col style={styles.homeTextContainer}>\n                            <p>\n                                The Spectrum Analyzer Community is a crowd-sourcing initiative to collect and analyse spectrum data. It uses small radio sensors based on cheap commodity hardware and offers aggregated spectrum information over an open API.\n\n                                The initiative's goal is to sense the entire spectrum in populated regions of the world and to make the data available in real-time for different kinds of stakeholders which require a deeper knowledge of the actual spectrum usage.\n\n                                ElectroSense is an open initiative in which everyone can contribute with spectrum measurements and access the collected data. If you want to take part of this initiative, get involved now by setting up a sensor at your place or contact us to see how our data can help your business.\n                            </p>\n                        </Col>\n                        <Col style={styles.homeImageContainer}>\n                            <img src=\"https://pbs.twimg.com/profile_images/1216991579212328960/_zMGS59y_400x400.png\" alt=\"Logo\" width=\"300\" height=\"300\" />\n                        </Col>\n\n                    </Row>\n                    <Col>\n                        <MapContainer center={[43.931014, 11.778697]} zoom={5} scrollWheelZoom={true}>\n                            <TileLayer\n                                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                            />\n                            {data.map((item) => (\n                                <Marker\n                                    key={(item.name)}\n                                    position={[item.latitude, item.longitude]}  >\n                                </Marker>\n                            ))}\n                        </MapContainer>\n\n                        <Card style={{ width: '18rem' }}>\n                            <Card.Body>\n\n                                <img src=\"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\" alt=\"GitHub Logo\" width=\"250\" height=\"250\" class=\"center\" />\n                                <Card.Title>Open Source</Card.Title>\n                                <Card.Text>\n                                    Il progetto è stato sviluppato in modo open source, per questo motivo è possibile accedere al codice sorgente e contribuire allo sviluppo del progetto.\n                                    Per maggiori informazioni visitare la pagina GitHub.\n                                </Card.Text>\n                                <Button variant=\"primary\" href=\"https://github.com/elrich2610/spectrum-analyzer\">GitHub</Button>\n\n\n\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </div>\n\n            </Container>\n\n\n        </>\n    );\n};\n\nexport default Home;","/home/ale/spectrum-analyzer/src/pages/Submit.js",["62","63"],"import React from 'react';\n\nimport '../style/Documentation.scss'                     //style\nimport { Container, Table, Alert } from 'react-bootstrap';      //component\nimport Navigation from '../components/Navigation.js'\nconst Apply = () => {\n    return (\n        <>\n            <Navigation/>\n            <Container>\n                Submit\n            </Container>\n        </>\n    );\n};\n\nexport default Apply;","/home/ale/spectrum-analyzer/src/components/Navigation.js",["64","65"],"import React from 'react';\n\nimport { Container, Navbar, Nav } from \"react-bootstrap\";\nimport { Link, useParams } from 'react-router-dom';\nimport logo from '../media/logo.png'\nimport data from '../data/data.json'\nimport Select from 'react-select'\nimport { useHistory } from \"react-router-dom\";\n\nconst Navigation = (props) => {\n\n    //obtaining the list of the avaiable sensors\n    const options = []\n    for(var sensor in data) {\n        options.push(\n            {\n                value: data[sensor].name+data[sensor].location,\n                label: data[sensor].name\n            }\n        )\n    }\n\n    \n    \n\n\n\n    //handle change of state selecting a new sensor\n    const HandleSensorChange = e => {\n        props.setSensor(e);\n\n    }\n     \n\n    return (\n        <div>\n            <Navbar bg=\"transparent\" expand=\"lg\">\n                <Container>\n                    <Link to=\"/\" style={{textDecoration:'none'}}>\n                        <Navbar.Brand href=\"#home\">\n                            <img src={logo} alt=\"logo\" style={{width:'100px',paddingTop:'20px'}}/>\n                            <span style={{paddingLeft:'20px'}}>Spectrum Analyzer</span>\n                        </Navbar.Brand>\n                    </Link>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"ms-auto\">\n                            <Nav.Link style={{width: '300px', marginTop:'-6px'}}>\n                                <Select\n                                    placeholder=\"Select Option\"\n                                    value={options.find(obj => obj.value === props.sensor)}\n                                    options={options} \n                                    onChange={HandleSensorChange}   \n                                                                                                  \n                                />\n                            </Nav.Link>\n                            <Link to=\"/dashboard\" style={{textDecoration:'none'}}>\n                                <Nav.Link href=\"#Dashboard\" >Sensors</Nav.Link>\n                            </Link>\n                            <Link to=\"/project\" style={{textDecoration:'none'}}>\n                                <Nav.Link href=\"#Project\" >The Project</Nav.Link>\n                            </Link>\n                            <Link to=\"/apply\" style={{textDecoration:'none'}}>\n                                <Nav.Link href=\"#Submit\">Submit</Nav.Link>\n                            </Link>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </div>\n    );\n};\n\nexport default Navigation;","/home/ale/spectrum-analyzer/src/components/Map.js",["66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":10,"column":10,"nodeType":"74","messageId":"75","endLine":10,"endColumn":22},{"ruleId":"72","severity":1,"message":"76","line":10,"column":24,"nodeType":"74","messageId":"75","endLine":10,"endColumn":33},{"ruleId":"72","severity":1,"message":"77","line":10,"column":35,"nodeType":"74","messageId":"75","endLine":10,"endColumn":41},{"ruleId":"72","severity":1,"message":"78","line":10,"column":43,"nodeType":"74","messageId":"75","endLine":10,"endColumn":48},{"ruleId":"72","severity":1,"message":"79","line":3,"column":21,"nodeType":"74","messageId":"75","endLine":3,"endColumn":26},{"ruleId":"72","severity":1,"message":"80","line":3,"column":33,"nodeType":"74","messageId":"75","endLine":3,"endColumn":36},{"ruleId":"72","severity":1,"message":"81","line":1,"column":28,"nodeType":"74","messageId":"75","endLine":1,"endColumn":36},{"ruleId":"72","severity":1,"message":"80","line":2,"column":26,"nodeType":"74","messageId":"75","endLine":2,"endColumn":29},{"ruleId":"72","severity":1,"message":"79","line":2,"column":31,"nodeType":"74","messageId":"75","endLine":2,"endColumn":36},{"ruleId":"72","severity":1,"message":"82","line":2,"column":38,"nodeType":"74","messageId":"75","endLine":2,"endColumn":42},{"ruleId":"72","severity":1,"message":"83","line":4,"column":8,"nodeType":"74","messageId":"75","endLine":4,"endColumn":12},{"ruleId":"72","severity":1,"message":"84","line":5,"column":8,"nodeType":"74","messageId":"75","endLine":5,"endColumn":14},{"ruleId":"85","severity":1,"message":"86","line":26,"column":6,"nodeType":"87","endLine":26,"endColumn":8,"suggestions":"88"},{"ruleId":"72","severity":1,"message":"79","line":3,"column":21,"nodeType":"74","messageId":"75","endLine":3,"endColumn":26},{"ruleId":"72","severity":1,"message":"78","line":4,"column":43,"nodeType":"74","messageId":"75","endLine":4,"endColumn":48},{"ruleId":"72","severity":1,"message":"89","line":7,"column":10,"nodeType":"74","messageId":"75","endLine":7,"endColumn":19},{"ruleId":"72","severity":1,"message":"90","line":4,"column":21,"nodeType":"74","messageId":"75","endLine":4,"endColumn":26},{"ruleId":"72","severity":1,"message":"79","line":4,"column":28,"nodeType":"74","messageId":"75","endLine":4,"endColumn":33},{"ruleId":"72","severity":1,"message":"91","line":4,"column":16,"nodeType":"74","messageId":"75","endLine":4,"endColumn":25},{"ruleId":"72","severity":1,"message":"92","line":8,"column":10,"nodeType":"74","messageId":"75","endLine":8,"endColumn":20},{"ruleId":"72","severity":1,"message":"93","line":1,"column":11,"nodeType":"94","messageId":"75","endLine":1,"endColumn":17},{"ruleId":"72","severity":1,"message":"95","line":2,"column":17,"nodeType":"74","messageId":"75","endLine":2,"endColumn":26},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'MapContainer' is defined but never used.","Identifier","unusedVar","'TileLayer' is defined but never used.","'Marker' is defined but never used.","'Popup' is defined but never used.","'Alert' is defined but never used.","'Col' is defined but never used.","'useState' is defined but never used.","'Card' is defined but never used.","'data' is defined but never used.","'Submit' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'requestOptions'. Either include it or remove the dependency array.","ArrayExpression",["98"],"'useEffect' is defined but never used.","'Table' is defined but never used.","'useParams' is defined but never used.","'useHistory' is defined but never used.","'google' is defined but never used.","Program","'Component' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},"Update the dependencies array to be: [requestOptions]",{"range":"101","text":"102"},[696,698],"[requestOptions]"]